{{- if semverCompare "^1.9-0" .Capabilities.KubeVersion.GitVersion }}
apiVersion: apps/v1
{{- else }}
apiVersion: apps/v1beta1
{{- end }}
kind: Deployment
metadata:
  name: {{ template "traefik.fullname" . }}
  labels:
    app: {{ template "traefik.name" . }}
    chart: {{ template "traefik.chart" . }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
spec:
  replicas: {{ default 1 .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ template "traefik.name" . }}
      release: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      {{- with .Values.rollingUpdate }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
  template:
    metadata:
      labels:
        app: {{ template "traefik.name" . }}
        chart: {{ template "traefik.chart" . }}
        release: {{ .Release.Name | quote }}
        heritage: {{ .Release.Service | quote }}
    spec:
      serviceAccountName: {{ template "traefik.fullname" . }}
      terminationGracePeriodSeconds: 60
      volumes:
      - name: certs
        secret:
          secretName: synker-ovh-tls-prd
          defaultMode: 420
      - name: static-config
        configMap:
          name: {{ template "traefik.fullname" . }}
      - name: dynamic-config
        configMap:
          name: {{ template "traefik.fullname" . }}
      containers:
      - image: {{ .Values.image.name }}:{{ .Values.image.tag }}
        name: {{ template "traefik.fullname" . }}
        resources:
          {{- with .Values.resources }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        securityContext:
          capabilities:
            drop:
              - ALL
            add:
              - NET_BIND_SERVICE
        volumeMounts:
          - name: certs
            mountPath: "/certs"
            readOnly: true
          - name: static-config
            mountPath: "/etc/traefik"
            readOnly: true
          - name: dynamic-config
            mountPath: "/config"
            readOnly: true
        readinessProbe:
          httpGet:
            path: /ping
            port: {{ .Values.ports.traefik.port }}
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /ping
            port: {{ .Values.ports.traefik.port }}
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        ports:
        {{- range $name, $config := .Values.ports }}
        - name: {{ $name | quote }}
          containerPort: {{ $config.port }}
          protocol: TCP
          {{- if $config.exposedPort }}
          hostPort: {{ $config.exposedPort }}
          {{- end }}
        {{- end }}
        args:
          {{- range $name, $config := .Values.ports }}
          - "--entryPoints.{{$name}}.address=:{{ $config.port }}"
          {{- end }}
          # - "--api.dashboard={{ .Values.dashboard.enable }}"
          # - "--ping=true"
          # - "--providers.kubernetescrd"
          {{- with .Values.additionalArguments }}
          {{- range . }}
          - {{ . | quote }}
          {{- end }}
          {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
