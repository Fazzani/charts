trigger:
  branches:
    include:
    - master
    - refs/tags/*
  paths:
    exclude:
    - '*.md'

variables:
  vmImage: 'ubuntu-16.04'
  kubernetesCluster: 'ovh cluster'

stages:
- stage: Test
  pool:
    vmImage: $(vmImage)
  jobs:
  - job: lint
    displayName: Helm chart lint
    steps:
    - task: HelmInstaller@1
      displayName: Helm installer
      inputs:
        helmVersionToInstall: latest

    - task: HelmDeploy@0
      displayName: Helm init
      inputs:
        command: init
        upgradetiller: false
        waitForExecution: false
        connectionType: Kubernetes Service Connection
        kubernetesServiceEndpoint: $(kubernetesCluster)

    - task: HelmDeploy@0
      displayName: Helm lint openvpn
      inputs:
        command: lint
        arguments: $(System.DefaultWorkingDirectory)/charts/openvpn --debug # --strict
        upgradetiller: false
        waitForExecution: false
        connectionType: Kubernetes Service Connection
        kubernetesServiceEndpoint: $(kubernetesCluster)

    - task: HelmDeploy@0
      displayName: Helm lint traefik2
      inputs:
        command: lint
        arguments: $(System.DefaultWorkingDirectory)/charts/traefik2 --debug # --strict
        upgradetiller: false
        waitForExecution: false
        connectionType: Kubernetes Service Connection
        kubernetesServiceEndpoint: $(kubernetesCluster)

    - task: HelmDeploy@0
      displayName: Helm install openvpn dry-run
      inputs:
        command: upgrade
        arguments: --dry-run
        chartType: FilePath
        chartPath: $(System.DefaultWorkingDirectory)/charts/openvpn
        upgradetiller: false
        waitForExecution: false
        connectionType: Kubernetes Service Connection
        kubernetesServiceEndpoint: $(kubernetesCluster)
        releaseName: openvpn

    ## commented because already CRD existed on my personal cluster (ovh)
    # - task: HelmDeploy@0
    #   displayName: Helm install traefik2 dry-run
    #   inputs:
    #     command: upgrade
    #     arguments: --dry-run
    #     chartType: FilePath
    #     chartPath: $(System.DefaultWorkingDirectory)/charts/traefik2
    #     upgradetiller: false
    #     waitForExecution: false
    #     connectionType: Kubernetes Service Connection
    #     kubernetesServiceEndpoint: $(kubernetesCluster)
    #     releaseName: traefik2

- stage: Publish
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'],'refs/tags/'))
  dependsOn: Test
  name: 'Build.SourceBranchName-$(date:yyyy.M)$(rev:.r)'
  pool:
    vmImage: $(vmImage)
  jobs:
  - job:
    displayName: Publish
    steps:

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'

    - task: HelmInstaller@1
      displayName: Helm installer
      inputs:
        helmVersionToInstall: latest

    - task: HelmDeploy@0
      displayName: Helm index
      inputs:
        command: repo
        arguments: index --url https://fazzani.synker.ovh/charts/ --merge index.yaml .
        upgradetiller: false
        waitForExecution: false
        connectionType: Kubernetes Service Connection
        kubernetesServiceEndpoint: $(kubernetesCluster)

    - script: |
        export GITHUB_TOKEN=$(GITHUB_TOKEN)
        git config --global user.email "ci@synker.ovh"
        git config --global user.name "chartpress"
        cd "$(System.DefaultWorkingDirectory)/charts" && \
        pip install wheel && \
        pip install chartpress && \
        chartpress --publish-chart
      displayName: Helm Charts publish
