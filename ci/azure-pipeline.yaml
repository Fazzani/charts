trigger:
  branches:
    include:
    - master
    - refs/tags/*
  paths:
    exclude:
    - '*.md'

variables:
  vmImage: 'ubuntu-16.04'
  kubernetesCluster: 'ovh cluster'


jobs:
- job: lint
  displayName: Helm chart lint
  pool:
    vmImage: $(vmImage)
  steps:
  - task: HelmInstaller@1
    displayName: Helm installer
    inputs:
      helmVersionToInstall: latest

  - task: HelmDeploy@0
    displayName: Helm init
    inputs:
      command: init
      upgradetiller: false
      waitForExecution: false
      connectionType: Kubernetes Service Connection
      kubernetesServiceEndpoint: $(kubernetesCluster)

  - task: HelmDeploy@0
    displayName: Helm lint
    inputs:
      command: lint
      arguments: $(System.DefaultWorkingDirectory)/charts/openvpn --debug # --strict
      upgradetiller: false
      waitForExecution: false
      connectionType: Kubernetes Service Connection
      kubernetesServiceEndpoint: $(kubernetesCluster)

  - task: HelmDeploy@0
    displayName: Helm install dry-run
    inputs:
      command: install
      arguments: openvpn --dry-run
      chartType: FilePath
      chartPath: $(System.DefaultWorkingDirectory)/charts/openvpn
      upgradetiller: false
      waitForExecution: false
      connectionType: Kubernetes Service Connection
      kubernetesServiceEndpoint: $(kubernetesCluster)

  - task: HelmDeploy@0
    displayName: Helm package
    inputs:
      command: package
      chartType: FilePath
      chartPath: $(System.DefaultWorkingDirectory)/charts/openvpn
      upgradetiller: false
      waitForExecution: false
      connectionType: Kubernetes Service Connection
      kubernetesServiceEndpoint: $(kubernetesCluster)

  - task: HelmDeploy@0
    displayName: Helm index
    inputs:
      command: repo
      arguments: index --url https://fazzani.synker.ovh/openvpn/ --merge index.yaml .
      upgradetiller: false
      waitForExecution: false
      connectionType: Kubernetes Service Connection
      kubernetesServiceEndpoint: $(kubernetesCluster)

  - bash: |
      export GITHUB_TOKEN=$(GITHUB_TOKEN)
      (cd ./charts && pip install chartpress && chartpress --publish-chart)
    displayName: 'Helm Charts publish'
